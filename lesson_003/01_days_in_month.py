# -*- coding: utf-8 -*-

# (if/elif/else)

# По номеру месяца вывести кол-во дней в нем (без указания названия месяца, в феврале 28 дней)
# Результат проверки вывести на консоль
# Если номер месяца некорректен - сообщить об этом
days_in_month = {
    '1': '31',
    '2': '28',
    '3': '31',
    '4': '30',
    '5': '31',
    '6': '30',
    '7': '31',
    '8': '31',
    '9': '30',
    '10': '31',
    '11': '30',
    '12': '31',
}
#  что-то не очень понял куда пристроить оператор in?!

# Номер месяца получать от пользователя следующим образом
# while True:
#     user_input = input("Введите, пожалуйста, номер месяца: ")
#     if user_input.isdigit():
#         month = int(user_input)
#         if 0 < month <= 12:
#             print('Вы ввели', month)
#             print(days_in_month[int(user_input)])
#             break
#         else:
#             print('Вы ввели некорректный номер месяца!')
#     else:
#         print('Вы ввели некорректный номер месяца!')
while True:
    user_input = input("Введите, пожалуйста, номер месяца: ")
    if user_input in days_in_month:
        print('Вы ввели', user_input)
        print(days_in_month[user_input])
        break
    else:
        print('Вы ввели некорректный номер месяца!')

#  данный алгоритм при таком словаре не сможет вывести количество дней,
#  если первые 9 месяцев пишут с 0 впереди: 01...09
#  мой первый алгоритм срабатывал, можно конечно словарь расширить...
#  Такой вариант я не рассматривал, но можно к входной строке
#  применить метод lstrip("0"). Тогда строка "01" превратится в "1"
#  и словарь будет работать.

# Зачёт!
